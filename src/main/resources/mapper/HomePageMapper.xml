<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lensyn.ispbs.mapper.HomePageMapper">
	<resultMap type="java.util.HashMap" id="hashmap" />
	<!-- 经济运行指标通用类 -->
	<resultMap id="economicOperationIndex"
		type="com.lensyn.ispbs.entity.home.EconomicOperationIndex">
		<result column="ID" property="powerStationId" jdbcType="VARCHAR" />
		<result column="TYPECODE" property="typeCode" jdbcType="VARCHAR" />
		<result column="APPLIEDTIME" property="appliedTime" jdbcType="VARCHAR" />
		<result column="DATA" property="data" jdbcType="VARCHAR" />
	</resultMap>
	<!-- 首页实时水位数据 -->
	<resultMap id="InTimeSwResultMap"
		type="com.lensyn.ispbs.entity.home.AreaStationInTimeSw">
		<id column="BZSTCD" property="id" jdbcType="INTEGER" />
		<result column="BZSTNM" property="name" jdbcType="VARCHAR" />
		<result column="ZR" property="inTimeSw" jdbcType="VARCHAR" />
		<result column="ZCSW" property="zcsw" jdbcType="VARCHAR" />
		<result column="SSW" property="ssw" jdbcType="VARCHAR" />
	</resultMap>

	<!-- 区域面雨量/降水量/流域面积数据 -->
	<resultMap id="AreaRainInfoResultMap" type="com.lensyn.ispbs.entity.rain.AreaInfoData">
		<result column="surfacerain" property="surfacerain" jdbcType="VARCHAR" />
		<result column="arearainfall" property="arearainfall" jdbcType="VARCHAR" />
		<result column="areacover" property="areacover" jdbcType="VARCHAR" />
	</resultMap>

	<!--查询某电站各年的流量过程数据 (日数据) -->
	<select id="getFlow" resultMap="hashmap" resultType="arraylist"
		parameterType="map">
		select * from (
		<!--5年均值数据 -->
		select to_char(t.appliedtime,'MM-dd') appliedtime,round(avg(t.data),2)
		data,'1' type from WDS_RESERVOIRFLOWDAY t where t.meascode=3701 and
		t.id=(select a.id from BM_RESERVOIR a where
		a.hydroplant=#{station,jdbcType=VARCHAR})
		and
		to_char(t.appliedtime,'yyyy')&gt;to_char(ADD_MONTHS(to_date(#{datadate,jdbcType=VARCHAR},'yyyy'),-60),'yyyy')
		group by to_char(t.appliedtime,'MM-dd')
		union
		<!--今年流量 -->
		select to_char(t.appliedtime,'yyyy-MM-dd') appliedtime,t.data,'2' type
		from WDS_RESERVOIRFLOWDAY t where t.meascode=3701 and t.id=(select
		a.id from BM_RESERVOIR a where
		a.hydroplant=#{station,jdbcType=VARCHAR}) and
		to_char(t.appliedtime,'yyyy')=#{datadate,jdbcType=VARCHAR}
		union
		<!--今年计划流量 -->
		select to_char(t.appliedtime,'yyyy-MM-dd') appliedtime,t.data,'3' type
		from wds_reservoirplanflowday t where t.id=(select a.id from
		BM_RESERVOIR a where a.hydroplant=#{station,jdbcType=VARCHAR}) and
		to_char(appliedtime,'yyyy')=#{datadate,jdbcType=VARCHAR}
		union
		<!--同期流量 -->
		select to_char(t.appliedtime,'yyyy-MM-dd') appliedtime,t.data,'4' type
		from WDS_RESERVOIRFLOWDAY t where t.meascode=3701 and t.id=(select
		a.id from BM_RESERVOIR a where
		a.hydroplant=#{station,jdbcType=VARCHAR}) and
		to_char(ADD_MONTHS(t.appliedtime,12),'yyyy')=#{datadate,jdbcType=VARCHAR}
		) a order by a.type,a.appliedtime
	</select>

	<!--查询某电站各年的流量过程数据 (旬数据) -->
	<select id="getFlowByTendays" resultMap="hashmap" resultType="arraylist"
		parameterType="map">
		select * from
		(select * from
		(select
		appliedtime,round(avg(a.data),2) data,'1' type from
		(select
		substr(a.appliedtime,0,2)||'月'||(case
		when(to_number(substr(a.appliedtime,4))&lt;11) then '上旬' when
		(to_number(substr(a.appliedtime,4))&gt;10 and
		to_number(substr(a.appliedtime,4))&lt;21) then '中旬'
		when(to_number(substr(a.appliedtime,4))&gt;20) then '下旬' end)
		appliedtime,a.data from
		(select to_char(t.appliedtime,'MM-dd')
		appliedtime,avg(t.data) data from
		WDS_RESERVOIRFLOWDAY t where
		t.meascode=3701 and t.id=(select a.id
		from BM_RESERVOIR a where
		a.hydroplant=#{station,jdbcType=VARCHAR})
		and
		to_char(t.appliedtime,'yyyy')&gt;to_char(ADD_MONTHS(to_date(#{datadate,jdbcType=VARCHAR},'yyyy'),-60),'yyyy')
		group by to_char(t.appliedtime,'MM-dd')) a) a group by a.appliedtime
		order by a.appliedtime )
		union
		select * from
		(select
		appliedtime,round(avg(a.data),2) data,'2' type from
		(select
		substr(to_char(appliedtime,'yyyy-MM-dd'),0,8)||(case
		when(to_number(to_char(appliedtime,'dd'))&lt;11) then '上旬' when
		(to_number(to_char(appliedtime,'dd'))&gt;10 and
		to_number(to_char(appliedtime,'dd'))&lt;21) then '中旬'
		when(to_number(to_char(appliedtime,'dd'))&gt;20) then '下旬' end)
		appliedtime,t.data
		from WDS_RESERVOIRFLOWDAY t where t.meascode=3701
		and t.id=(select a.id
		from BM_RESERVOIR a where
		a.hydroplant=#{station,jdbcType=VARCHAR})
		and
		to_char(t.appliedtime,'yyyy')=#{datadate,jdbcType=VARCHAR}) a
		group by
		a.appliedtime order by a.appliedtime)
		union
		select * from
		(select
		appliedtime,round(avg(a.data),2) data,'3' type from
		(select
		substr(to_char(appliedtime,'yyyy-MM-dd'),0,8)||(case
		when(to_number(to_char(appliedtime,'dd'))&lt;11) then '上旬' when
		(to_number(to_char(appliedtime,'dd'))&gt;10 and
		to_number(to_char(appliedtime,'dd'))&lt;21) then '中旬'
		when(to_number(to_char(appliedtime,'dd'))&gt;20) then '下旬' end)
		appliedtime,t.data
		from wds_reservoirplanflowday t where
		t.meascode=3701 and t.id=(select
		a.id from BM_RESERVOIR a where
		a.hydroplant=#{station,jdbcType=VARCHAR}) and
		to_char(t.appliedtime,'yyyy')=#{datadate,jdbcType=VARCHAR}) a group by
		a.appliedtime order by a.appliedtime)
		union
		select * from
		(select
		appliedtime,round(avg(a.data),2) data,'4' type from
		(select
		substr(to_char(appliedtime,'yyyy-MM-dd'),0,8)||(case
		when(to_number(to_char(appliedtime,'dd'))&lt;11) then '上旬' when
		(to_number(to_char(appliedtime,'dd'))&gt;10 and
		to_number(to_char(appliedtime,'dd'))&lt;21) then '中旬'
		when(to_number(to_char(appliedtime,'dd'))&gt;20) then '下旬' end)
		appliedtime,t.data
		from WDS_RESERVOIRFLOWDAY t where t.meascode=3701
		and t.id=(select a.id
		from BM_RESERVOIR a where
		a.hydroplant=#{station,jdbcType=VARCHAR})
		and
		to_char(ADD_MONTHS(t.appliedtime,12),'yyyy')=#{datadate,jdbcType=VARCHAR})
		a group by a.appliedtime order by a.appliedtime)
		) a order by
		a.type,a.appliedtime
	</select>

	<!--查询某电站各年的流量过程数据 (月数据) -->
	<select id="getFlowMonth" resultMap="hashmap" resultType="arraylist"
		parameterType="map">
		select * from
		(select * from
		(select
		to_char(t.appliedtime,'MM') appliedtime,round(avg(data),2) data,'1'
		type from WDS_RESERVOIRFLOWDAY t where t.meascode=3701 and
		t.id=(select a.id from BM_RESERVOIR a where
		a.hydroplant=#{station,jdbcType=VARCHAR})
		and
		to_char(t.appliedtime,'yyyy')&gt;to_char(ADD_MONTHS(to_date(#{datadate,jdbcType=VARCHAR},'yyyy'),-60),'yyyy')
		group by to_char(t.appliedtime,'MM') order by
		to_char(t.appliedtime,'MM'))
		union
		select * from
		(select
		to_char(appliedtime,'yyyy-MM') appliedtime,round(avg(data),2)
		data,'2'
		type
		from WDS_RESERVOIRFLOWDAY t where t.meascode=3701 and t.id=(select
		a.id
		from BM_RESERVOIR a where
		a.hydroplant=#{station,jdbcType=VARCHAR})
		and
		to_char(t.appliedtime,'yyyy')=#{datadate,jdbcType=VARCHAR} group
		by
		to_char(appliedtime,'yyyy-MM') order by appliedtime)
		union
		select * from
		(select to_char(appliedtime,'yyyy-MM') appliedtime,round(avg(data),2)
		data,'3' type
		from wds_reservoirplanflowday where meascode=3701 and
		id=(select a.id from
		BM_RESERVOIR a where
		a.hydroplant=#{station,jdbcType=VARCHAR}) and
		to_char(appliedtime,'yyyy')=#{datadate,jdbcType=VARCHAR} group by
		to_char(appliedtime,'yyyy-MM') order by appliedtime)
		union
		select * from
		(select to_char(ADD_MONTHS(t.appliedtime,12),'yyyy-MM')
		appliedtime,round(avg(data),2) data,'4' type
		from WDS_RESERVOIRFLOWDAY
		t where t.meascode=3701 and t.id=(select a.id
		from BM_RESERVOIR a where
		a.hydroplant=#{station,jdbcType=VARCHAR})
		and
		to_char(ADD_MONTHS(t.appliedtime,12),'yyyy')=#{datadate,jdbcType=VARCHAR}
		group by to_char(ADD_MONTHS(t.appliedtime,12),'yyyy-MM') order by
		appliedtime)
		) a order by a.type,a.appliedtime
	</select>
	<!--实时电量 -->
	<select id="SpddrRealTimePowerGenerationList" parameterType="map"
		resultMap="economicOperationIndex">
		select typecode,appliedtime,data from(
		--实际电量
		(SELECT '01'
		typecode,to_char(a.appliedtime,'hh24:mi') appliedtime,SUM(a.data) OVER
		(ORDER BY a.appliedtime) data FROM
		(select
		appliedtime,round(sum(nvl(data/10,0)),0) data from
		TMR_PLANTENERGY15MIN t
		where t.meascode=2000 and
		to_char(t.appliedtime,'yyyy-MM-dd')=to_char(sysdate,'yyyy-MM-dd')
		group by appliedtime
		order by t.appliedtime) a
		union
		--计划电量
		SELECT '02'
		typecode,to_char(a.appliedtime,'hh24:mi')
		appliedtime,SUM(a.data) OVER
		(ORDER BY a.appliedtime) data FROM
		(select
		appliedtime,round(sum(nvl(data/10,0)),0) data from
		TMR_PLANTPLANPOWER t
		where t.meascode=2030 and
		to_char(t.appliedtime,'yyyy-MM-dd')=to_char(sysdate,'yyyy-MM-dd')
		group by appliedtime
		order by t.appliedtime) a
		union
		--实际负荷
		select '03'
		typecode,to_char(to_date(appliedtime,'yyyy-MM-dd
		hh24:mi:ss'),'hh24:mi') appliedtime,data from
		(select
		appliedtime,sum(data) data from
		(select
		id,appliedtime,round(avg(data),0) data from
		(select id,(case
		floor((to_char(appliedtime,'mi'))/15)
		when 0 then
		to_char(appliedtime,'yyyy-mm-dd hh24')||':00:00'
		when 1 then
		to_char(appliedtime,'yyyy-mm-dd hh24')||':15:00'
		when 2 then
		to_char(appliedtime,'yyyy-mm-dd hh24')||':30:00'
		when 3 then
		to_char(appliedtime,'yyyy-mm-dd hh24')||':45:00'
		end) as
		appliedtime,nvl(data,0) data
		from ems_PLANTACTIVEPOWER where
		meascode=1000 and
		to_char(appliedtime,'yyyy-MM-dd')=to_char(sysdate,'yyyy-MM-dd')
		order
		by id,appliedtime) a group by id,appliedtime order by id,appliedtime)
		a group by appliedtime order by appliedtime) where data>2000
		union
		--计划负荷
		select '04' typecode,to_char(appliedtime,'hh24:mi')
		appliedtime,round(sum(nvl(data,0)),0) data from TMR_PLANTPLANPOWER t
		where t.meascode=1020 and
		to_char(t.appliedtime,'yyyy-MM-dd')=to_char(sysdate,'yyyy-MM-dd')
		group by appliedtime
		order by appliedtime)) order by
		typecode,appliedtime
	</select>
	<!-- 实时水位 -->
	<select id="getInTimeSwList" resultMap="InTimeSwResultMap">
		select * from
		(select
		(case bm.HYDROPLANT when 11000324 then 1 when 11000326 then 2 when
		11000029 then 3 else 4 end) num,bm.HYDROPLANT BZSTCD, BM.ALIASNAME
		BZSTNM, wds.data zr, web.ZCSW ZCSW, web.SSW SSW
		from wds_watersituation
		wds
		inner join (select max(APPLIEDTIME) APPLIEDTIME, id
		from
		wds_watersituation
		where meascode = 3601
		and id in (select id
		from
		BM_RESERVOIR
		where HYDROPLANT in ('11000324', '11000029', '11000004',
		'11000326'))
		group by id) a on wds.APPLIEDTIME = a.APPLIEDTIME
		and
		wds.id = a.ID
		left join BM_RESERVOIR bm on wds.id = bm.id
		left join
		web_BZST_B web on to_char(bm.HYDROPLANT) = to_char(web.BZSTCD)
		where
		wds.meascode = 3601
		ORDER BY BZSTCD) a order by num
	</select>
	<!--省调装机 -->
	<select id="getProvinceSchedulingInstalledCapacity" resultMap="hashmap"
		resultType="arraylist" parameterType="map">
		select t.name ,t.monthvalue from
		GXPT_MARKET_DATA t where t.isdeleted=0 and
		to_char(t.datadate,'yyyy-MM')=(select to_char(max(datadate),'yyyy-MM')
		from GXPT_MARKET_DATA where isdeleted=0) and t.type like '%装机容量%' and
		name in('省调水电','省调火电','省调风电','省调太阳能')
	</select>

	<!--查询调度关系 -->
	<select id="getSchedulingRelationship" resultMap="hashmap"
		resultType="arraylist" parameterType="map">
		select t.name ,t.monthvalue from
		GXPT_MARKET_DATA t where t.isdeleted=0 and
		to_char(t.datadate,'yyyy-MM')=(select to_char(max(datadate),'yyyy-MM')
		from GXPT_MARKET_DATA where isdeleted=0) and t.type like '%装机容量%' and
		name in('国调','网调','省调')
		union
		select '地调',((select t.monthvalue from
		GXPT_MARKET_DATA t where
		t.isdeleted=0 and
		to_char(t.datadate,'yyyy-MM')=(select
		to_char(max(datadate),'yyyy-MM')
		from GXPT_MARKET_DATA where
		isdeleted=0) and t.type like '%装机容量%' and
		name='四川省')-
		(select sum(t.monthvalue) from GXPT_MARKET_DATA t where
		t.isdeleted=0 and
		to_char(t.datadate,'yyyy-MM')=(select
		to_char(max(datadate),'yyyy-MM')
		from GXPT_MARKET_DATA where
		isdeleted=0) and t.type like '%装机容量%' and
		name in('国调','网调','省调')))
		monthvalue from dual
	</select>
	<!--逐日发电量累计曲线 -->
	<select id="getGenerationByDaySUM" resultMap="hashmap"
		resultType="arraylist" parameterType="map">
		select a.*,b.电网日计划累计,c.本期累计 from
		(SELECT a.datadate,SUM(a.同期发电) OVER
		(ORDER BY a.datadate) 同期累计 FROM
		(select to_char(ADD_MONTHS(datadate,
		12),'yyyy-MM-dd') datadate,同期发电 from
		(select t.appliedtime
		datadate,sum(nvl(t.data/10,0)) 同期发电 from
		TMR_PLANTENERGYDAY t where
		t.meascode=2000 and t.id in
		<foreach collection="ids" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
		and (t.psvcode=0 or t.psvcode=1 or t.psvcode=2 or t.psvcode=3) and
		((to_char(ADD_MONTHS(appliedtime,
		13),'yyyy-MM')=#{datadate,jdbcType=VARCHAR} and
		to_char(t.appliedtime,'dd')&gt;'25') or
		(to_char(ADD_MONTHS(appliedtime,
		12),'yyyy-MM')=#{datadate,jdbcType=VARCHAR}) and
		to_char(t.appliedtime,'dd')&lt;'26') group by t.appliedtime) a
		order by
		a.datadate desc) a) a
		left join
		( SELECT a.datadate,SUM(a.电网日计划) OVER
		(ORDER BY a.datadate) 电网日计划累计
		FROM
		(select
		to_char(t.appliedtime,'yyyy-MM-dd') datadate,sum(nvl(t.data/10,0))/4
		电网日计划 from tmr_PLANTPLANPOWER t where id in
		<foreach collection="ids" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
		and ((to_char(ADD_MONTHS(appliedtime,
		1),'yyyy-MM')=#{datadate,jdbcType=VARCHAR}
		and
		to_char(t.appliedtime,'dd')&gt;'25') or
		(to_char(t.appliedtime,'yyyy-MM')=#{datadate,jdbcType=VARCHAR}) and
		to_char(t.appliedtime,'dd')&lt;'26') group by
		to_char(t.appliedtime,'yyyy-MM-dd')) a) b
		on a.datadate=b.datadate
		left
		join
		(SELECT a.datadate,SUM(a.本期发电) OVER (ORDER BY a.datadate) 本期累计
		FROM
		(select to_char(t.appliedtime,'yyyy-MM-dd')
		datadate,sum(nvl(t.data/10,0))
		本期发电 from tmr_plantenergyhour t where
		t.meascode=2000 and t.id in
		<foreach collection="ids" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
		and ((to_char(ADD_MONTHS(appliedtime,
		1),'yyyy-MM')=#{datadate,jdbcType=VARCHAR} and
		to_char(t.appliedtime,'dd')&gt;'25') or
		(to_char(t.appliedtime,'yyyy-MM')=#{datadate,jdbcType=VARCHAR}) and
		to_char(t.appliedtime,'dd')&lt;'26') group by
		to_char(t.appliedtime,'yyyy-MM-dd')) a) c
		on a.datadate=c.datadate
		order by a.datadate
	</select>
	<!--查询公司本月发电计划，本月发电能力，本月电网发电计划，本月已发电量 -->
	<select id="getCapacity" resultMap="hashmap" resultType="arraylist"
		parameterType="map">
		select to_char(t.datadate,'yyyy-MM') datadate,sum(nvl(t.company,0))/10
		company,sum(nvl(t.grid,0))/10 grid,
		(select sum(nvl(t.data/10,0))
		realgeneration from tmr_plantenergyhour t where
		t.meascode=2000 and
		t.id in
		<foreach collection="ids" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
		and
		((to_char(ADD_MONTHS(appliedtime,1),'yyyy-MM')=#{datadate,jdbcType=VARCHAR}
		and to_char(t.appliedtime,'dd')&gt;'25') or
		(to_char(t.appliedtime,'yyyy-MM')=#{datadate,jdbcType=VARCHAR}) and
		to_char(t.appliedtime,'dd')&lt;'26')) monthvalue,
		(select
		to_char(max(appliedtime),'yyyy-MM-dd') maxday from
		tmr_plantenergyhour
		t where t.meascode=2000 and t.id in
		<foreach collection="ids" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
		) maxday,
		(select sum(t.monthvalue)*10000 from gxpt_energy_capacity t
		where
		t.meascode=3701 and t.isdeleted=0 and t.name in
		<foreach collection="names" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
		and to_char(t.datadate,'yyyy-MM')=#{datadate,jdbcType=VARCHAR})
		capacity from GXPT_GRID_COMPANY_PLAN t where t.isdeleted=0 and t.plant
		in
		<foreach collection="ids" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
		and to_char(t.datadate,'yyyy-MM')=#{datadate,jdbcType=VARCHAR} group
		by to_char(t.datadate,'yyyy-MM')
	</select>

	<select id="getAreaRainInfoOfDDH" resultMap="AreaRainInfoResultMap">

		SELECT
		ROUND(SUM(m1.data)/SUM(m1.weight),1) surfacerain,
		ROUND((SUM(m1.data)/SUM(m1.weight))*76383/10,1) arearainfall,
		'76383' areacover
		FROM
		(
		SELECT
		m.info_time info_time,
		ROUND(SUM(m.data)/SUM(m.weight),1) data,
		m.area_id area_id,
		m.weight weight
		FROM
		(
		SELECT
		SUM(a.data*s.weight) data ,
		t.predict_date info_time,
		s.AREA_ID AS area_id,
		SUM(s.weight) weight,
		s.SITE_NAME
		FROM
		FORC_RAIN_HOUR_RECORD t
		LEFT JOIN
		WDS_TELEMETRYRAINFALLHOUR a
		ON
		t.site_id = a.id
		AND t.predict_date = a.appliedtime - 1 / 24
		AND a.meascode = 3500
		LEFT JOIN
		FORC_SITE s
		ON
		t.site_id = s.mapping_id
		AND s.meascode = 3500
		WHERE
		s.mapping_id IN (30000016,30000021,30000002,30000003,30000005,30000012,30000018
		,
		30000025,
		30000020,30000017,30000008,30000027)
		AND a.APPLIEDTIME BETWEEN to_date(#{stime},'yyyy-mm-dd hh24:mi:ss') AND
		to_date(#{etime}, 'yyyy-mm-dd hh24:mi:ss')
		GROUP BY
		predict_date,
		s.weight,
		s.AREA_ID,
		s.SITE_NAME,
		s.weight
		ORDER BY
		predict_date DESC ) m
		GROUP BY
		m.info_time,
		m.area_id,
		m.weight ) m1
	</select>

	<select id="getAreaRainInfo" resultMap="AreaRainInfoResultMap"
		parameterType="java.util.Map">
		SELECT
		m1.data AS surfacerain,
		ROUND((m1.data* area.remark)/10,1) AS arearainfall,
		area.remark AS areacover
		FROM
		forc_area area
		LEFT JOIN
		(
		SELECT
		ROUND(SUM(m.data)/
		(
		SELECT
		SUM(F.WEIGHT)
		FROM
		FORC_SITE F
		WHERE
		F.AREA_ID = #{areaId} ),2) DATA,
		m.area_id
		FROM
		(
		SELECT
		SUM(wds.data)*site.weight data,
		site.site_name,
		site.area_id
		FROM
		WDS_TELEMETRYRAINFALLHOUR wds
		LEFT JOIN
		forc_site site
		ON
		wds.id = site.mapping_id
		WHERE
		wds.appliedtime BETWEEN to_date(#{stime},'yyyy-mm-dd hh24:mi:ss') AND
		to_date(#{etime}, 'yyyy-mm-dd hh24:mi:ss')
		AND site.area_id = #{areaId}
		AND wds.meascode = 3500
		GROUP BY
		site.site_name,
		site.area_id,
		site.weight ) m
		GROUP BY
		m.area_id ) m1
		ON
		area.id = m1.area_id
		WHERE
		area.id = #{areaId}
	</select>
</mapper>